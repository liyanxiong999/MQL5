//+------------------------------------------------------------------+
//|                                                    orderbook.mq5 |
//|                                                    liyanxiong999 |
//|                                            www.icmarkets-zce.com |
//+------------------------------------------------------------------+
#property copyright "liyanxiong999"
#property link      "www.icmarkets-zce.com"
#property version   "1.00"
//+------------------------------------------------------------------+
//| Expert initialization function                                   |
//+------------------------------------------------------------------+
int OnInit()
  {
//---
   bool addbookevent = MarketBookAdd(_Symbol);
   if(addbookevent)
   {
    Print("book add "+_Symbol);
   }
   else
   {
   Print("book failed "+ _Symbol);
   }
//---
   return(INIT_SUCCEEDED);
  }
//+------------------------------------------------------------------+
//| Expert deinitialization function                                 |
//+------------------------------------------------------------------+
void OnDeinit(const int reason)
  {
//---
   MarketBookRelease(_Symbol);
  }
//+------------------------------------------------------------------+
//| Expert tick function                                             |
//+------------------------------------------------------------------+
void OnTick()
  {
//---
   MqlBookInfo bookinfo[];
   bool bookget = MarketBookGet(_Symbol,bookinfo);
   string commenttext = "\nMarket Book for "+_Symbol;
   if(bookget)
   {
      int booksize = ArraySize(bookinfo);
      for(int i = 0; i < booksize;i++)
      {
       if(bookinfo[i].type == BOOK_TYPE_SELL)
       {
        commenttext += "\n sell Price: " + DoubleToString(bookinfo[i].price,(int)SymbolInfoInteger(_Symbol,SYMBOL_DIGITS))+
                       "  Volume: " + IntegerToString(bookinfo[i].volume)+
                       "  Type: " + EnumToString(bookinfo[i].type);
                        
       }
      }
      commenttext += "\n ASK: " + DoubleToString(SymbolInfoDouble(_Symbol,SYMBOL_ASK),(int)SymbolInfoInteger(_Symbol,SYMBOL_DIGITS))+
                     "\n BID: " + DoubleToString(SymbolInfoDouble(_Symbol,SYMBOL_BID),(int)SymbolInfoInteger(_Symbol,SYMBOL_DIGITS));
      for(int i = 0; i < booksize;i++)
      {
       if(bookinfo[i].type == BOOK_TYPE_BUY)
       {
        commenttext += "\n buy Price: " + DoubleToString(bookinfo[i].price,(int)SymbolInfoInteger(_Symbol,SYMBOL_DIGITS))+
                       "  Volume: " + IntegerToString(bookinfo[i].volume)+
                       "  Type: " + EnumToString(bookinfo[i].type);
                        
       }
      }
   }
   else
   {
    commenttext = _Symbol+" failed to book";
   }
  
   Comment(commenttext);
                  
  } 
//+------------------------------------------------------------------+
void OnBookEvent(const string &symbol) 
  { 
   OnTick();
  }
